/* syntax:
[
    {
        `type` is "exact match" or "regex match"
        `command` is the command you want to verify the output of
        `expected_stdout` is the stdout string to match if type is "exact match"
        `expected_regex` is the regex to match against stdout if type is "regex match"
        `fix` is the command to run if stdout does not match expected result
        `case_sensitive` is "true" or "false"
        `description` is a human-readable string describing the configuration being checked
    }
]
/* samples:
[
    {
        type: "exact match"
        command: "defaults -currentHost read /Library/Preferences/com.apple.alf globalstate"
        expected_stdout: "1"
        fix: "defaults -currentHost write read /Library/Preferences/com.apple.alf globalstate -bool true"
        case_sensitive: "false"
        description: "The OSX application firewall is enabled."
    },
    {
        type: "regex match"
        command: "pmset -g"
        expected_regex: ".*DestroyFVKeyOnStandby\\s+1.*"
        fix: "sudo pmset -a destroyfvkeyonstandby 1"
        case_sensitive: "false"
        description: "The File Vault key is destroyed when going to standby mode."
    }
]
*/
/* NOTES:
    * back-slashes '\' must be escaped with a double black-slash, i.e. '\\'
*/
[
    {
        type: "exact match"
        command: "defaults -currentHost read /Library/Preferences/com.apple.alf globalstate"
        expected_stdout: "1"
        fix: "sudo defaults -currentHost write read /Library/Preferences/com.apple.alf globalstate -bool true"
        case_sensitive: "false"
        description: "The OSX application firewall is enabled."
        reference: "https://github.com/drduh/OS-X-Security-and-Privacy-Guide"
    },
    {
        type: "exact match"
        command: "defaults -currentHost read /Library/Preferences/com.apple.alf loggingenabled"
        expected_stdout: "1"
        fix: "sudo defaults -currentHost write /Library/Preferences/com.apple.alf loggingenabled -bool true"
        case_sensitive: "false"
        description: "Logging is enabled for the operating system."
        reference: "https://github.com/drduh/OS-X-Security-and-Privacy-Guide"
    },
    /* TODO: want to add stealth mode to this list, but it should probably be a "suggested" configuration rather than a required one.
    {

        type: "exact match"
        command: "defaults -currentHost read /Library/Preferences/com.apple.alf stealthenabled"
        expected_stdout: "1"
        fix: "sudo defaults write /Library/Preferences/com.apple.alf stealthenabled -bool true"
        case_sensitive: "false"
        description: "Stealth mode is enabled for OSX: Computer does not respond to ICMP ping requests or connection attempts from a closed TCP/UDP port."
        reference: "https://github.com/drduh/OS-X-Security-and-Privacy-Guide"
        suggested: "true"
        undo: "sudo defaults write /Library/Preferences/com.apple.alf stealthenabled -bool false"
    },
    */
    {
        type: "exact match"
        command: "defaults -currentHost read /Library/Preferences/com.apple.alf allowsignedenabled"
        expected_stdout: "1"
        fix: "sudo defaults -currentHost write /Library/Preferences/com.apple.alf allowsignedenabled -bool false"
        case_sensitive: "false"
        description: "Automatic whitelisting of Apple-signed applications for firewall is disabled."
        reference: "https://github.com/drduh/OS-X-Security-and-Privacy-Guide"
        undo: "sudo defaults -currentHost write /Library/Preferences/com.apple.alf allowsignedenabled -bool true"
    },
    {
        type: "regex match"
        command: "pmset -g"
        expected_regex: ".*destroyfvkeyonstandby\\s+1.*"
        fix: "sudo pmset -a destroyfvkeyonstandby 1"
        case_sensitive: "false"
        description: "The File Vault key is destroyed when going to standby mode."
        reference: "https://github.com/drduh/OS-X-Security-and-Privacy-Guide"
    },
    {
        type: "regex match"
        command: "pmset -g"
        expected_regex: ".*hibernatemode\\s+25.*"
        fix: "sudo pmset -a hibernatemode 25"
        case_sensitive: "false"
        description: "The system will store a copy of memory to persistent storage, and will remove power to memory."
        reference: "https://github.com/drduh/OS-X-Security-and-Privacy-Guide"
    },
    {
        type: "regex match"
        command: "git --version"
        expected_regex: ".*(command not found|2\\.8\\.1).*"
        //This will make sure latest git is installed via homebrew and make make apple's version of git non-competitive
        fix: "brew update && brew install git && brew upgrade git && sudo mv /usr/bin/git /usr/bin/git-apple"
        case_sensitive: "false"
        description: "git is up to date or is not installed"
    },
    {
        type: "regex match"
        command: "sudo launchctl list"
        expected_regex: "^((?!com\\.apple\\.apsd).)*$"
        fix: "sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.apsd.plist"
        case_sensitive: "false"
        description: "Apple Push Notifications are disabled."
        reference: "https://github.com/drduh/OS-X-Security-and-Privacy-Guide"
        undo: "sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.apsd.plist"
    }
]
